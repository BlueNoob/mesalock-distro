#!/bin/bash

# Copyright (c) 2017, The MesaLock Linux Project Contributors
# All rights reserved.
#
# This work is licensed under the terms of the BSD 3-Clause License.
# For a copy, see the LICENSE file.

set -eE
trap 'echo "[-] ERROR: $BASH_SOURCE:$LINENO $BASH_COMMAND" >&2' ERR

export MAKEFLAGS=-j$(nproc)

workdir="$(pwd)"
buildroot="$workdir/build"
pkgrepobase="$(dirname $workdir)/packages"

VERBOSE=false

mkpkg() {
  set -e
  category="$(dirname $1)"
  pkgrepo="$pkgrepobase/$category"
  prepare() { :; }
  build() { :; }
  package() { :; }

  . "$pkgrepobase/$1/BUILD"
  
  srcdir="$buildroot/src/$pkgname"
  builddir="$buildroot/bld/$pkgname"
  pkgdir="$buildroot/pkg/$pkgname"
  outdir="$buildroot/out"
  
  rm -rf "$srcdir" "$builddir" "$pkgdir"
  mkdir -p "$srcdir" "$builddir" "$pkgdir" "$outdir"
  
  echo "[+] $1: start"
  for f in prepare build package; do
    echo "[+] $1: $f"
    if [ "$2" == true ]; then
      cd "$buildroot" && "$f"
    else
      cd "$buildroot" && "$f" > /dev/null 2>&1
    fi
  done
  
  echo "[+] $1: tar and zip"
  tar cfJ "$outdir/$pkgname.tar.xz" -C "$pkgdir" .
  echo "[+] $1: done"
}

check_env() {
  rustup show
}

while true; do
  case "$1" in
    -v | --verbose ) VERBOSE=true; shift ;;
    * ) break ;;
  esac
done

if [ "$VERBOSE" == true ]; then
    flag="-v"
fi

if [[ "$#" -eq 0 ]] ; then
  echo '[+] mkpkg: build all packages'
  check_env
  for category in core community core-testing community-testing; do
    export workdir buildroot pkgrepobase && export -f mkpkg
    ls "$pkgrepobase/$category" | parallel --ungroup "-j$(nproc)" mkpkg "$category/{}" "$VERBOSE"
  done
else
  check_env
  for pkg in "$@"; do
      mkpkg "$pkg" "$VERBOSE"
  done
fi
